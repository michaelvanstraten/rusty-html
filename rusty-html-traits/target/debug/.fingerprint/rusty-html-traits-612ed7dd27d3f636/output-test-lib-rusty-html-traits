{"message":"the method `htmlify` exists for struct `Vec<&str>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":1317,"byte_end":1630,"line_start":58,"line_end":68,"column_start":20,"column_end":10,"is_primary":true,"text":[{"text":"        let html = html!{","highlight_start":20,"highlight_end":26},{"text":"            <html>","highlight_start":1,"highlight_end":19},{"text":"                <head>","highlight_start":1,"highlight_end":23},{"text":"                <title test = {vec![\"ad\", \"sdf\", \"sdfsdf\"]}>Page Title</title>","highlight_start":1,"highlight_end":79},{"text":"                </head>","highlight_start":1,"highlight_end":24},{"text":"                <body>","highlight_start":1,"highlight_end":23},{"text":"                <h1>My First Heading</h1>","highlight_start":1,"highlight_end":42},{"text":"                <p>My first paragraph.</p>","highlight_start":1,"highlight_end":43},{"text":"                </body>","highlight_start":1,"highlight_end":24},{"text":"            </html>","highlight_start":1,"highlight_end":20},{"text":"        };","highlight_start":1,"highlight_end":10}],"label":"method cannot be called on `Vec<&str>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":1317,"byte_end":1630,"line_start":58,"line_end":68,"column_start":20,"column_end":10,"is_primary":false,"text":[{"text":"        let html = html!{","highlight_start":20,"highlight_end":26},{"text":"            <html>","highlight_start":1,"highlight_end":19},{"text":"                <head>","highlight_start":1,"highlight_end":23},{"text":"                <title test = {vec![\"ad\", \"sdf\", \"sdfsdf\"]}>Page Title</title>","highlight_start":1,"highlight_end":79},{"text":"                </head>","highlight_start":1,"highlight_end":24},{"text":"                <body>","highlight_start":1,"highlight_end":23},{"text":"                <h1>My First Heading</h1>","highlight_start":1,"highlight_end":42},{"text":"                <p>My first paragraph.</p>","highlight_start":1,"highlight_end":43},{"text":"                </body>","highlight_start":1,"highlight_end":24},{"text":"            </html>","highlight_start":1,"highlight_end":20},{"text":"        };","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"html!","def_site_span":{"file_name":"/Users/michaelvanstraten/Codebase/rusty-html/src/lib.rs","byte_start":367,"byte_end":414,"line_start":16,"line_end":16,"column_start":1,"column_end":48,"is_primary":false,"text":[{"text":"pub fn html(input : TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/michaelvanstraten/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs","byte_start":13541,"byte_end":13637,"line_start":400,"line_end":400,"column_start":1,"column_end":97,"is_primary":false,"text":[{"text":"pub struct Vec<T, #[unstable(feature = \"allocator_api\", issue = \"32838\")] A: Allocator = Global> {","highlight_start":1,"highlight_end":97}],"label":"doesn't satisfy `Vec<&str>: HTMLify`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/michaelvanstraten/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs","byte_start":13541,"byte_end":13637,"line_start":400,"line_end":400,"column_start":1,"column_end":97,"is_primary":false,"text":[{"text":"pub struct Vec<T, #[unstable(feature = \"allocator_api\", issue = \"32838\")] A: Allocator = Global> {","highlight_start":1,"highlight_end":97}],"label":"doesn't satisfy `Vec<&str>: Into<String>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied because of the requirements of the implementation of `HTMLify` for `_`:\n`Vec<&str>: Into<String>`\n`&Vec<&str>: Into<String>`\n`&mut Vec<&str>: Into<String>`\n`[&str]: Sized`\n`[&str]: Into<String>`\n`&[&str]: Into<String>`\n`&mut [&str]: Into<String>`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":128,"byte_end":135,"line_start":7,"line_end":7,"column_start":38,"column_end":45,"is_primary":true,"text":[{"text":"impl<T : std::convert::Into<String>> HTMLify for T {","highlight_start":38,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":140,"byte_end":141,"line_start":7,"line_end":7,"column_start":50,"column_end":51,"is_primary":true,"text":[{"text":"impl<T : std::convert::Into<String>> HTMLify for T {","highlight_start":50,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `htmlify` exists for struct `Vec<&str>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:58:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m58\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m        let html = html!{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m____________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m59\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            <html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m60\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                <head>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m61\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                <title test = {vec![\"ad\", \"sdf\", \"sdfsdf\"]}>Page Title</title>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            </html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `Vec<&str>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/michaelvanstraten/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:400:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m400\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0mpub struct Vec<T, #[unstable(feature = \"allocator_api\", issue = \"32838\")] A: Allocator = Global> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------------------------------------------------------\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `Vec<&str>: HTMLify`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `Vec<&str>: Into<String>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied because of the requirements of the implementation of `HTMLify` for `_`:\u001b[0m\n\u001b[0m      `Vec<&str>: Into<String>`\u001b[0m\n\u001b[0m      `&Vec<&str>: Into<String>`\u001b[0m\n\u001b[0m      `&mut Vec<&str>: Into<String>`\u001b[0m\n\u001b[0m      `[&str]: Sized`\u001b[0m\n\u001b[0m      `[&str]: Into<String>`\u001b[0m\n\u001b[0m      `&[&str]: Into<String>`\u001b[0m\n\u001b[0m      `&mut [&str]: Into<String>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:7:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mimpl<T : std::convert::Into<String>> HTMLify for T {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `html` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"unused import: `crate::HTMLify`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":1195,"byte_end":1209,"line_start":53,"line_end":53,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"    use crate::HTMLify;","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::HTMLify`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:53:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    use crate::HTMLify;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"aborting due to previous error; 1 warning emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to previous error; 1 warning emitted\u001b[0m\n\n"}
{"message":"For more information about this error, try `rustc --explain E0599`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0599`.\u001b[0m\n"}
